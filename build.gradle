
buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version "${springBoot}"
    id 'io.spring.dependency-management' version "${dependencyManagement}"
}

allprojects {
    group = 'io.github.kprasad99'
    version = '0.0.1-SNAPSHOT'
}

subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    bootRun {
        systemProperties = System.properties
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloud}"
        }
    }

    dependencies {

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        if (project.name != 'person-proto') {
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.boot:spring-boot-starter-webflux'
            implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
            implementation "io.github.lognet:grpc-spring-boot-starter:${lognet}"
            developmentOnly 'org.springframework.boot:spring-boot-devtools'
            runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
            annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
            testImplementation('org.springframework.boot:spring-boot-starter-test') {
                exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            }
            testImplementation 'io.projectreactor:reactor-test'
            implementation group: 'org.modelmapper', name: 'modelmapper', version: "${modelMapper}"

            // Add for testing purpose
            compile group: 'io.projectreactor.tools', name: 'blockhound', version: "${blockHound}"
            compile 'io.zipkin.brave:brave-instrumentation-grpc'

        }
    }

    test {
        useJUnitPlatform()
    }

}
